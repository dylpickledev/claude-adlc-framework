name: Suggest Completion Decision

on:
  pull_request:
    types: [opened]
    branches: [main]
    # EXPLICIT: Only run on pull requests targeting main, never on push events

jobs:
  suggest-completion:
    name: Suggest Completion Decision
    runs-on: ubuntu-latest

    steps:
      - name: Analyze PR for completion suggestion
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // Analyze PR content for completion recommendation
            const title = pr.title.toLowerCase();
            const body = pr.body ? pr.body.toLowerCase() : '';
            const fileTypes = files.map(f => f.filename);

            let suggestion = 'claude:skip';
            let reasoning = [];
            let confidence = 'medium';

            // HIGH PRIORITY: Agent capability improvements (ALWAYS complete)
            const agentFiles = fileTypes.filter(f =>
              f.includes('.claude/agents/') ||
              f.includes('.claude/commands/') ||
              f.includes('agent') ||
              f.includes('.claude/')
            );
            if (agentFiles.length > 0) {
              suggestion = 'claude:complete';
              confidence = 'high';
              reasoning.push('🤖 Agent files modified - HIGH VALUE completion for agent capabilities');
            }

            // HIGH PRIORITY: Knowledge system files (ALWAYS complete)
            const knowledgeFiles = fileTypes.filter(f =>
              f.includes('knowledge/da-agent-hub/') ||
              f.includes('knowledge/da_team_documentation/') ||
              f.includes('CLAUDE.md') ||
              (f.includes('README.md') && !f.includes('node_modules'))
            );
            if (knowledgeFiles.length > 0) {
              suggestion = 'claude:complete';
              confidence = 'high';
              reasoning.push('📚 Knowledge/documentation system modified - HIGH VALUE for knowledge preservation');
            }

            // HIGH PRIORITY: Complex technical implementations
            const complexFiles = fileTypes.filter(f =>
              f.includes('scripts/') ||
              f.includes('.github/workflows/') ||
              f.includes('setup.sh') ||
              f.endsWith('.py') ||
              f.endsWith('.js') ||
              f.endsWith('.sh')
            );
            if (complexFiles.length > 0) {
              suggestion = 'claude:complete';
              confidence = 'high';
              reasoning.push('⚙️ Complex implementations - completion can extract valuable patterns');
            }

            // HIGH PRIORITY: ADLC workflow files
            const adlcFiles = fileTypes.filter(f =>
              f.includes('capture.sh') ||
              f.includes('roadmap.sh') ||
              f.includes('build.sh') ||
              f.includes('finish.sh') ||
              f.includes('work-init.sh') ||
              f.includes('work-complete.sh')
            );
            if (adlcFiles.length > 0) {
              suggestion = 'claude:complete';
              confidence = 'high';
              reasoning.push('🔄 ADLC workflow files - completion can improve development lifecycle');
            }

            // MEDIUM PRIORITY: Documentation that could be enhanced
            const docFiles = fileTypes.filter(f => f.includes('.md') && !f.includes('README.md'));
            if (docFiles.length > 0) {
              if (suggestion !== 'claude:complete') {
                suggestion = 'claude:complete';
                confidence = 'medium';
              }
              reasoning.push('📝 Documentation changes - completion can enhance and standardize');
            }

            // Check for simple changes that don't need completion
            const configOnly = fileTypes.every(f =>
              f.includes('package.json') ||
              f.includes('.gitignore') ||
              f.includes('config.') ||
              f.endsWith('.lock')
            );
            if (configOnly) {
              suggestion = 'claude:no-need';
              reasoning.push('⚙️ Configuration-only changes - no completion needed');
            }

            // Check for dependency updates
            if (title.includes('update') && title.includes('dep')) {
              suggestion = 'claude:no-need';
              reasoning.push('📦 Dependency update - no completion needed');
            }

            // Check for quick fixes
            if (title.includes('fix') && title.includes('typo')) {
              suggestion = 'claude:no-need';
              reasoning.push('✏️ Typo fix - no completion needed');
            }

            const comment = `## 🤖 Suggested Completion Decision: \`${suggestion}\`

### 🔍 Analysis:
${reasoning.map(r => `- ${r}`).join('\n')}

### 📋 Files Changed:
${fileTypes.slice(0, 10).map(f => `- \`${f}\``).join('\n')}
${fileTypes.length > 10 ? `- ... and ${fileTypes.length - 10} more files` : ''}

### 🎯 Next Steps:
Please add the **\`${suggestion}\`** label if you agree with this suggestion, or choose a different completion decision based on the criteria in the PR template.

**Remember:** This is just a suggestion - the final decision is yours based on the specific context and requirements of this PR.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });