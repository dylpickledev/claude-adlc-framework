name: Claude Issue Mentions

# Trigger on issue comments for @claude mentions
on:
  issue_comment:
    types: [created]

jobs:
  claude-respond:
    # Only run if comment mentions @claude or claude[bot]
    if: |
      contains(github.event.comment.body, '@claude') ||
      contains(github.event.comment.body, 'claude[bot]')

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout da-agent-hub
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git Config
        run: |
          git config --global user.name "claude[bot]"
          git config --global user.email "claude@da-agent-hub.anthropic.com"

      - name: Parse Claude Command
        id: parse
        run: |
          COMMENT_BODY='${{ github.event.comment.body }}'
          ISSUE_NUM='${{ github.event.issue.number }}'
          REPO='${{ github.repository }}'

          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT
          echo "repository=$REPO" >> $GITHUB_OUTPUT

          # Determine what Claude should do
          if [[ "$COMMENT_BODY" == *"@claude investigate"* ]]; then
            echo "action=investigate" >> $GITHUB_OUTPUT
          elif [[ "$COMMENT_BODY" == *"@claude fix"* ]] || [[ "$COMMENT_BODY" == *"@claude create PR"* ]]; then
            echo "action=fix" >> $GITHUB_OUTPUT
          elif [[ "$COMMENT_BODY" == *"@claude analyze"* ]]; then
            echo "action=analyze" >> $GITHUB_OUTPUT
          else
            echo "action=respond" >> $GITHUB_OUTPUT
          fi

      - name: Execute Claude Investigation
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: |
            # Claude Issue Investigation - da-agent-hub

            You've been mentioned in a GitHub issue comment. Please respond appropriately.

            ## Context
            - **Repository**: ${{ steps.parse.outputs.repository }}
            - **Issue #**: ${{ steps.parse.outputs.issue_number }}
            - **Action Requested**: ${{ steps.parse.outputs.action }}
            - **Comment Author**: ${{ github.event.comment.user.login }}

            ## Issue Information
            **Title**: ${{ github.event.issue.title }}

            **Issue Body**:
            ```
            ${{ github.event.issue.body }}
            ```

            **Recent Comment**:
            ```
            ${{ github.event.comment.body }}
            ```

            ## Your Task

            Based on the action requested (${{ steps.parse.outputs.action }}), please:

            ### For "investigate" requests:
            1. Use the `github-sleuth-expert` agent to analyze the issue
            2. Check for related issues using GitHub MCP tools
            3. Examine issue labels and metadata
            4. Look for patterns across similar issues
            5. Provide root cause analysis
            6. Post your findings as a comment on issue #${{ steps.parse.outputs.issue_number }}

            ### For "fix" or "create PR" requests:
            1. Analyze the issue to understand what needs fixing
            2. Determine which specialist agent is appropriate:
               - dbt-expert for SQL/transformation issues
               - data-engineer-role for pipeline issues
               - analytics-engineer-role for modeling issues
            3. Create a detailed fix plan
            4. Post the plan as a comment explaining what you'll do
            5. Note: Actual PR creation requires repository access - guide user on next steps

            ### For "analyze" requests:
            1. Deep dive into the technical details
            2. Use appropriate specialist agents based on issue type
            3. Provide comprehensive analysis with code references
            4. Post detailed findings as a comment

            ### For general mentions:
            1. Provide helpful context and suggestions
            2. Reference relevant documentation or patterns
            3. Suggest next steps or additional investigation

            ## Available Tools
            - GitHub MCP: Use `mcp__github__*` tools to interact with issues
            - Atlassian MCP: Access related Jira/Confluence context if needed
            - Specialist agents: Delegate to domain experts as appropriate

            ## Response Requirements
            - Post your response as a comment on this issue
            - Be helpful and specific
            - Reference issue numbers and line numbers when relevant
            - Suggest concrete next steps

            Please begin your investigation and respond to the user.

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

      - name: Create Summary
        if: always()
        run: |
          echo "ðŸ¤– Claude responded to mention in issue #${{ steps.parse.outputs.issue_number }}"
          echo "Action: ${{ steps.parse.outputs.action }}"
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
