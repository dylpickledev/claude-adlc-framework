name: Claude Complete Project

on:
  pull_request:
    types: [labeled, unlabeled]
  pull_request_review:
    types: [submitted]

jobs:
  check-trigger:
    name: Check Completion Trigger
    runs-on: ubuntu-latest
    outputs:
      should-complete: ${{ steps.check.outputs.should-complete }}
      branch-name: ${{ steps.check.outputs.branch-name }}
      project-name: ${{ steps.check.outputs.project-name }}
    steps:
      - name: Check completion trigger
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // Check for label-based trigger
            const hasCompleteLabel = pr.labels.some(label =>
              label.name === 'claude:complete'
            );

            // Check for approval-based trigger (if no label)
            let hasApproval = false;
            if (!hasCompleteLabel) {
              const { data: reviews } = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });

              hasApproval = reviews.some(review =>
                review.state === 'APPROVED' &&
                review.user.login === context.repo.owner
              );
            }

            const shouldComplete = hasCompleteLabel || hasApproval;
            const branchName = pr.head.ref;

            // Extract project name from branch name
            let projectName = '';
            if (branchName.startsWith('feature-') || branchName.startsWith('fix-') || branchName.startsWith('research-')) {
              projectName = branchName;
            }

            console.log(`Should complete: ${shouldComplete}`);
            console.log(`Branch name: ${branchName}`);
            console.log(`Project name: ${projectName}`);
            console.log(`Has label: ${hasCompleteLabel}`);
            console.log(`Has approval: ${hasApproval}`);

            core.setOutput('should-complete', shouldComplete);
            core.setOutput('branch-name', branchName);
            core.setOutput('project-name', projectName);

  complete-project:
    name: Complete Project with Claude
    runs-on: ubuntu-latest
    needs: check-trigger
    if: needs.check-trigger.outputs.should-complete == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-trigger.outputs.branch-name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Claude CLI
        run: |
          npm install -g @anthropic-ai/claude-cli@latest

      - name: Configure Claude CLI
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "Setting up Claude CLI configuration..."
          mkdir -p ~/.config/claude
          echo "$ANTHROPIC_API_KEY" > ~/.config/claude/api_key

      - name: Run Claude project completion
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          PROJECT_NAME: ${{ needs.check-trigger.outputs.project-name }}
          BRANCH_NAME: ${{ needs.check-trigger.outputs.branch-name }}
        run: |
          echo "🤖 Starting Claude project completion workflow..."
          echo "Project Name: $PROJECT_NAME"
          echo "Branch: $BRANCH_NAME"

          # Use the existing claude-complete.sh script
          chmod +x ./scripts/claude-complete.sh
          ./scripts/claude-complete.sh "$PROJECT_NAME"

      - name: Commit completion changes
        if: success()
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "Claude Project Completion"

          # Stage all changes
          git add .

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "✅ No changes needed - project already complete"
          else
            echo "💾 Committing Claude completion changes..."
            git commit -m "feat: Complete project implementation via automated Claude workflow

Project completion performed by Claude via GitHub Actions.
Triggered by PR label or approval for final implementation polish.

- Reviewed current implementation state
- Added missing functionality and documentation
- Ensured quality standards and error handling
- Prepared for merge to main branch

🤖 Generated with [Claude Code](https://claude.ai/code) via GitHub Actions

Co-Authored-By: Claude <noreply@anthropic.com>"

            # Push changes to the branch
            git push origin HEAD
            echo "✅ Changes pushed successfully"
          fi

      - name: Update PR status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const branchName = '${{ needs.check-trigger.outputs.branch-name }}';

            let message = '';
            if (conclusion === 'success') {
              message = `✅ **Claude Project Completion Successful**

Project on branch \`${branchName}\` has been completed by Claude and is ready for merge.

**Completion Summary:**
- ✅ Implementation reviewed and polished
- ✅ Documentation updated and comprehensive
- ✅ Quality standards verified
- ✅ Ready for production deployment

The project is now ready for final review and merge.`;
            } else {
              message = `❌ **Claude Project Completion Failed**

There was an issue completing the project on branch \`${branchName}\`.

Please check the action logs for details and manually complete any remaining work before merging.`;
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });

      - name: Remove completion label
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const completionLabels = pr.labels.filter(label =>
              label.name === 'claude:complete'
            );

            for (const label of completionLabels) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: label.name
              });
            }