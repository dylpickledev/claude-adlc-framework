# nginx configuration for ALB + React App
# This config receives ALB authentication headers and injects them into the React app

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # React Router support - all routes serve index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Special handling for index.html - inject ALB auth headers as meta tags
    # This allows React to read authentication data from the DOM
    location = /index.html {
        # Disable caching for index.html to ensure fresh auth headers
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # Enable nginx substitution filter module
        sub_filter_types text/html;
        sub_filter_once on;

        # Inject ALB authentication headers as meta tags before </head>
        # ALB sets these headers:
        # - x-amzn-oidc-identity: User email
        # - x-amzn-oidc-data: JWT with user claims (email, name, groups, etc.)
        sub_filter '</head>' '
    <meta name="x-amzn-oidc-identity" content="$http_x_amzn_oidc_identity">
    <meta name="x-amzn-oidc-data" content="$http_x_amzn_oidc_data">
  </head>';
    }

    # Static assets - aggressive caching for performance
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint for ALB target group
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API proxy (optional - can also call API Gateway directly)
    # Forwards requests to existing API Gateway + Lambda backend
    location /api/ {
        # Remove /api prefix before forwarding
        rewrite ^/api/(.*)$ /$1 break;

        proxy_pass https://4gihwvts8c.execute-api.us-west-2.amazonaws.com;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass ALB auth headers to API (optional security enhancement)
        proxy_set_header x-amzn-oidc-identity $http_x_amzn_oidc_identity;
        proxy_set_header x-amzn-oidc-data $http_x_amzn_oidc_data;

        # Timeouts for Lambda cold starts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/xml+rss
        application/json;
}
