{
  "_comment": "Repository configuration for D&A Agent Hub. All entries are cloned during setup.",
  "settings": {
    "clone_method": "https",
    "update_existing": true,
    "check_git_access": true
  },
  "knowledge": {
    "da_team_documentation": {
      "url": "https://github.com/graniterock/da-team-documentation.git",
      "branch": "main",
      "description": "Data & Analytics team documentation"
    },
    "da_obsidian": {
      "url": "https://github.com/graniterock/da_obsidian.git",
      "branch": "master",
      "description": "Data & Analytics team Obsidian knowledge management vault - raw notes and unrefined ideas"
    }
  },
  "data_stack": {
    "_comment": "Organized data stack repositories by functional layer",
    "orchestration": {
      "orchestra": {
        "url": "https://github.com/graniterock/Orchestra.git",
        "branch": "master",
        "description": "Primary orchestration system - kicks off and manages Prefect flow executions",
        "folder": "repos/orchestration"
      },
      "prefect": {
        "url": "https://github.com/graniterock/prefect.git",
        "branch": "master",
        "description": "Main Prefect flows repository (airbyte-orchestrator, dbt-jobs-orchestrator, business integrations: JDE/AD sync, RockTalk employee sync)",
        "folder": "repos/orchestration"
      }
    },
    "ingestion": {
      "plantdemand_etl": {
        "url": "https://github.com/graniterock/plantdemand-etl.git",
        "branch": "master",
        "description": "PlantDemand ETL and Construction Forecasts flows",
        "folder": "repos/ingestion"
      },
      "mapistry_etl": {
        "url": "https://github.com/graniterock/mapistry-etl.git",
        "branch": "master",
        "description": "Mapistry ETL flows",
        "folder": "repos/ingestion"
      },
      "xbe_data_ingestion": {
        "url": "https://github.com/graniterock/xbe_data_ingestion.git",
        "branch": "main",
        "description": "XBE data ingestion flows",
        "folder": "repos/ingestion"
      },
      "postgres_pipelines": {
        "url": "https://github.com/graniterock/postgres_pipelines.git",
        "branch": "master",
        "description": "PostgreSQL data pipeline configurations",
        "folder": "repos/ingestion"
      },
      "hex_pipelines": {
        "url": "https://github.com/graniterock/hex_pipelines.git",
        "branch": "master",
        "description": "Hex platform data pipeline configurations",
        "folder": "repos/ingestion"
      }
    },
    "transformation": {
      "dbt_cloud": {
        "url": "https://github.com/graniterock/dbt_cloud.git",
        "branch": "dbt_dw",
        "description": "Main dbt transformation project",
        "folder": "repos/transformation"
      },
      "dbt_postgres": {
        "url": "https://github.com/graniterock/dbt_postgres.git",
        "branch": "master",
        "description": "dbt transformations for PostgreSQL",
        "folder": "repos/transformation"
      }
    },
    "serving": {
      "streamlit_apps_snowflake": {
        "url": "https://github.com/graniterock/streamlit_apps_snowflake.git",
        "branch": "master",
        "description": "Streamlit applications for Snowflake data visualization",
        "folder": "repos/serving"
      },
      "snowflake_notebooks": {
        "url": "https://github.com/graniterock/snowflake_notebooks.git",
        "branch": "master",
        "description": "Snowflake notebook collection for data analysis",
        "folder": "repos/serving"
      }
    },
    "operations": {
      "roy_kent": {
        "url": "https://github.com/graniterock/roy_kent.git",
        "branch": "master",
        "description": "Roy Kent coaching system",
        "folder": "repos/operations"
      },
      "sherlock": {
        "url": "https://github.com/graniterock/sherlock-investigation-bureau.git",
        "branch": "main",
        "description": "Sherlock Investigation Bureau - data quality and pipeline issue investigation",
        "folder": "repos/operations"
      }
    }
  },
  "prefect_context": {
    "_comment": "Prefect Cloud workspace context for workflow orchestration analysis",
    "workspace": "graniterock/bedrock",
    "environment": "production",
    "source_repositories": [
      "orchestra",
      "prefect",
      "plantdemand_etl",
      "mapistry_etl",
      "xbe_data_ingestion"
    ],
    "work_pools": [
      "K8s-Prod",
      "production"
    ],
    "key_flows": [
      "mapistry-etl",
      "dbt-jobs-orchestrator-flow",
      "airbyte-orchestrator",
      "Construction Forecasts",
      "Fuel cloud data ingestion",
      "PlantDemand ETL",
      "XBE ingestion",
      "jde-ad-sync",
      "rocktalk-employee-sync",
      "union-pacific-etl",
      "wrightexpress-ftp-etl"
    ],
    "integration_patterns": [
      "dbt Cloud coordination",
      "Airbyte data ingestion",
      "External API orchestration",
      "Business system synchronization"
    ],
    "coordination_strategy": {
      "master_orchestration": "orchestra-expert leads ALL workflow analysis - triggers everything",
      "prefect_flows": "Most Prefect flows are in the main 'prefect' repository (airbyte-orchestrator, dbt-jobs, business integrations)",
      "specialized_flows": "Construction/PlantDemand in plantdemand_etl, Mapistry in mapistry_etl, XBE in xbe_data_ingestion",
      "dbt_coordination": "orchestra-expert + dbt-expert for direct dbt job triggering",
      "cross_tool_coordination": "orchestra-expert coordinates all tools (Prefect, dbt, Airbyte, etc.)"
    },
    "orchestration_hierarchy": {
      "level_1_master": "Orchestra (kicks off everything - Prefect, dbt, Airbyte, Snowflake jobs)",
      "level_2_executors": "Prefect flows, dbt jobs, Airbyte syncs (when Orchestra calls them)",
      "level_3_data": "Snowflake, data warehouses (receive processed data)"
    }
  }
}